{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!pip install torch","metadata":{"papermill":{"duration":13.636404,"end_time":"2023-08-17T01:58:30.883158","exception":false,"start_time":"2023-08-17T01:58:17.246754","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2023-08-23T05:29:35.470990Z","iopub.execute_input":"2023-08-23T05:29:35.472084Z","iopub.status.idle":"2023-08-23T05:29:46.483309Z","shell.execute_reply.started":"2023-08-23T05:29:35.472045Z","shell.execute_reply":"2023-08-23T05:29:46.482130Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"Requirement already satisfied: torch in /opt/conda/lib/python3.10/site-packages (2.0.0)\nRequirement already satisfied: filelock in /opt/conda/lib/python3.10/site-packages (from torch) (3.12.2)\nRequirement already satisfied: typing-extensions in /opt/conda/lib/python3.10/site-packages (from torch) (4.6.3)\nRequirement already satisfied: sympy in /opt/conda/lib/python3.10/site-packages (from torch) (1.12)\nRequirement already satisfied: networkx in /opt/conda/lib/python3.10/site-packages (from torch) (3.1)\nRequirement already satisfied: jinja2 in /opt/conda/lib/python3.10/site-packages (from torch) (3.1.2)\nRequirement already satisfied: MarkupSafe>=2.0 in /opt/conda/lib/python3.10/site-packages (from jinja2->torch) (2.1.3)\nRequirement already satisfied: mpmath>=0.19 in /opt/conda/lib/python3.10/site-packages (from sympy->torch) (1.3.0)\n","output_type":"stream"}]},{"cell_type":"code","source":"import numpy as np\nimport csv\nimport shutil\nimport torch\nimport matplotlib.pyplot as plt","metadata":{"papermill":{"duration":3.952771,"end_time":"2023-08-17T01:58:34.842553","exception":false,"start_time":"2023-08-17T01:58:30.889782","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2023-08-23T05:29:46.487881Z","iopub.execute_input":"2023-08-23T05:29:46.488192Z","iopub.status.idle":"2023-08-23T05:29:46.493282Z","shell.execute_reply.started":"2023-08-23T05:29:46.488163Z","shell.execute_reply":"2023-08-23T05:29:46.492286Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"markdown","source":"## Git Clone","metadata":{"papermill":{"duration":0.006783,"end_time":"2023-08-17T01:58:34.856302","exception":false,"start_time":"2023-08-17T01:58:34.849519","status":"completed"},"tags":[]}},{"cell_type":"code","source":"#shutil.rmtree(\"/kaggle/working/VIPCUP2023_OLIVES_MY\")      ","metadata":{"papermill":{"duration":0.015993,"end_time":"2023-08-17T01:58:34.879236","exception":false,"start_time":"2023-08-17T01:58:34.863243","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2023-08-23T05:29:46.494778Z","iopub.execute_input":"2023-08-23T05:29:46.495768Z","iopub.status.idle":"2023-08-23T05:29:46.506091Z","shell.execute_reply.started":"2023-08-23T05:29:46.495722Z","shell.execute_reply":"2023-08-23T05:29:46.505031Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"%cd /kaggle/working","metadata":{"papermill":{"duration":0.017173,"end_time":"2023-08-17T01:58:34.902957","exception":false,"start_time":"2023-08-17T01:58:34.885784","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2023-08-23T05:29:46.507753Z","iopub.execute_input":"2023-08-23T05:29:46.508495Z","iopub.status.idle":"2023-08-23T05:29:46.519214Z","shell.execute_reply.started":"2023-08-23T05:29:46.508461Z","shell.execute_reply":"2023-08-23T05:29:46.518216Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"/kaggle/working\n","output_type":"stream"}]},{"cell_type":"code","source":"#!git clone https://github.com/KavinduKariyawasam/VIPCUP2023_OLIVES_MY.git","metadata":{"papermill":{"duration":1.823212,"end_time":"2023-08-17T01:58:36.732616","exception":false,"start_time":"2023-08-17T01:58:34.909404","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2023-08-23T05:29:46.520802Z","iopub.execute_input":"2023-08-23T05:29:46.521517Z","iopub.status.idle":"2023-08-23T05:29:46.528212Z","shell.execute_reply.started":"2023-08-23T05:29:46.521485Z","shell.execute_reply":"2023-08-23T05:29:46.527136Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"code","source":"!git clone https://github.com/Pixelvision-VIP/VIPCUP2023_OLIVES_edit.git","metadata":{"papermill":{"duration":1.604405,"end_time":"2023-08-17T01:58:38.344352","exception":false,"start_time":"2023-08-17T01:58:36.739947","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2023-08-23T05:29:46.529746Z","iopub.execute_input":"2023-08-23T05:29:46.530457Z","iopub.status.idle":"2023-08-23T05:29:48.436082Z","shell.execute_reply.started":"2023-08-23T05:29:46.530424Z","shell.execute_reply":"2023-08-23T05:29:48.434907Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stdout","text":"Cloning into 'VIPCUP2023_OLIVES_edit'...\nremote: Enumerating objects: 212, done.\u001b[K\nremote: Counting objects: 100% (141/141), done.\u001b[K\nremote: Compressing objects: 100% (116/116), done.\u001b[K\nremote: Total 212 (delta 84), reused 42 (delta 24), pack-reused 71\u001b[K\nReceiving objects: 100% (212/212), 1.58 MiB | 7.45 MiB/s, done.\nResolving deltas: 100% (117/117), done.\n","output_type":"stream"}]},{"cell_type":"code","source":"%cd /kaggle/working/VIPCUP2023_OLIVES_edit\n!git pull\n%cd ../","metadata":{"papermill":{"duration":1.461824,"end_time":"2023-08-17T01:58:39.814211","exception":false,"start_time":"2023-08-17T01:58:38.352387","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2023-08-23T05:29:48.439532Z","iopub.execute_input":"2023-08-23T05:29:48.439860Z","iopub.status.idle":"2023-08-23T05:29:49.908482Z","shell.execute_reply.started":"2023-08-23T05:29:48.439820Z","shell.execute_reply":"2023-08-23T05:29:49.907469Z"},"trusted":true},"execution_count":14,"outputs":[{"name":"stdout","text":"/kaggle/working/VIPCUP2023_OLIVES_edit\nAlready up to date.\n/kaggle/working\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{"papermill":{"duration":0.011552,"end_time":"2023-08-17T01:58:39.836832","exception":false,"start_time":"2023-08-17T01:58:39.825280","status":"completed"},"tags":[]},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#!gsutil -m cp /kaggle/working/VIPCUP2023_OLIVES_edit/baseline_result.csv gs://pixelvision/pytorch9000","metadata":{"papermill":{"duration":0.022413,"end_time":"2023-08-17T01:58:39.870496","exception":false,"start_time":"2023-08-17T01:58:39.848083","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2023-08-23T05:29:49.916803Z","iopub.execute_input":"2023-08-23T05:29:49.919536Z","iopub.status.idle":"2023-08-23T05:29:49.925706Z","shell.execute_reply.started":"2023-08-23T05:29:49.919496Z","shell.execute_reply":"2023-08-23T05:29:49.924747Z"},"trusted":true},"execution_count":15,"outputs":[]},{"cell_type":"markdown","source":"## Train Model","metadata":{"papermill":{"duration":0.010501,"end_time":"2023-08-17T01:58:39.892012","exception":false,"start_time":"2023-08-17T01:58:39.881511","status":"completed"},"tags":[]}},{"cell_type":"code","source":"#output_csv_name=''#this is required for train.py edited version","metadata":{"execution":{"iopub.status.busy":"2023-08-23T05:29:49.926996Z","iopub.execute_input":"2023-08-23T05:29:49.927578Z","iopub.status.idle":"2023-08-23T05:29:49.938598Z","shell.execute_reply.started":"2023-08-23T05:29:49.927547Z","shell.execute_reply":"2023-08-23T05:29:49.937710Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"code","source":"!python /kaggle/working/VIPCUP2023_OLIVES_edit/train.py --batch_size 64 --model 'resnet18' --dataset 'OLIVES' --epochs 1 --device 'cuda:0' --train_image_path '../input/olives-vip-cup-2023/2023 IEEE SPS Video and Image Processing (VIP) Cup - Ophthalmic Biomarker Detection/TRAIN/OLIVES' --test_image_path '../input/olives-vip-cup-2023/2023 IEEE SPS Video and Image Processing (VIP) Cup - Ophthalmic Biomarker Detection/TEST/' --test_csv_path '/kaggle/working/VIPCUP2023_OLIVES_edit/csv_dir/test_set_submission_template.csv' --train_csv_path '/kaggle/working/VIPCUP2023_OLIVES_edit/csv_dir/Training_Biomarker_Data.csv' --num_workers 2 --learning_rate 0.05 --momentum 0.9 --temp 0.07\n\nimport os\n\ntxt_file_path = '/kaggle/working/output_csv_name.txt'\ntry:\n    with open(txt_file_path, 'r') as file:\n        output_csv_name_content = file.read()\n        print(\"Contents of the file:\", output_csv_name_content)\nexcept Exception as e:\n    print(\"Error reading file:\", e)\n\ntry:\n    os.remove(txt_file_path)\n    print(\"txt file deleted successfully.\")\nexcept Exception as e:\n    print(\"Error deleting txt file:\", e)","metadata":{"papermill":{"duration":14026.09715,"end_time":"2023-08-17T05:52:26.000664","exception":false,"start_time":"2023-08-17T01:58:39.903514","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2023-08-23T05:29:49.939773Z","iopub.execute_input":"2023-08-23T05:29:49.940839Z","iopub.status.idle":"2023-08-23T05:31:38.239225Z","shell.execute_reply.started":"2023-08-23T05:29:49.940807Z","shell.execute_reply":"2023-08-23T05:31:38.238046Z"},"trusted":true},"execution_count":17,"outputs":[{"name":"stdout","text":"/opt/conda/lib/python3.10/site-packages/scipy/__init__.py:146: UserWarning: A NumPy version >=1.16.5 and <1.23.0 is required for this version of SciPy (detected version 1.23.5\n  warnings.warn(f\"A NumPy version >={np_minversion} and <{np_maxversion}\"\nTrain: [1][10/147]\t\nTrain: [1][20/147]\t\nTrain: [1][30/147]\t\nTrain: [1][40/147]\t\nTrain: [1][50/147]\t\nTrain: [1][60/147]\t\nTrain: [1][70/147]\t\nTrain: [1][80/147]\t\nTrain: [1][90/147]\t\nTrain: [1][100/147]\t\nTrain: [1][110/147]\t\nTrain: [1][120/147]\t\nTrain: [1][130/147]\t\nTrain: [1][140/147]\t\n==> Saving...\ncsv name file created successfully.\nContents of the file: model=resnet18epochs=1batch_size=64learning_rate=0.05momentum=0.9temp=0.07\ntxt file deleted successfully.\n","output_type":"stream"}]},{"cell_type":"code","source":"print(output_csv_name_content)","metadata":{"execution":{"iopub.status.busy":"2023-08-23T05:31:38.241892Z","iopub.execute_input":"2023-08-23T05:31:38.242170Z","iopub.status.idle":"2023-08-23T05:31:38.247831Z","shell.execute_reply.started":"2023-08-23T05:31:38.242143Z","shell.execute_reply":"2023-08-23T05:31:38.246849Z"},"trusted":true},"execution_count":18,"outputs":[{"name":"stdout","text":"model=resnet18epochs=1batch_size=64learning_rate=0.05momentum=0.9temp=0.07\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"output = np.load('/kaggle/working/output.npy')\nprint(output)","metadata":{"papermill":{"duration":0.73127,"end_time":"2023-08-17T05:52:26.893132","exception":true,"start_time":"2023-08-17T05:52:26.161862","status":"failed"},"tags":[],"execution":{"iopub.status.busy":"2023-08-23T05:31:38.249285Z","iopub.execute_input":"2023-08-23T05:31:38.249686Z","iopub.status.idle":"2023-08-23T05:31:38.270842Z","shell.execute_reply.started":"2023-08-23T05:31:38.249649Z","shell.execute_reply":"2023-08-23T05:31:38.269439Z"},"trusted":true},"execution_count":19,"outputs":[{"name":"stdout","text":"[[1. 0. 1. 0. 0. 0.]\n [1. 0. 1. 0. 0. 0.]\n [1. 0. 1. 0. 0. 0.]\n ...\n [1. 0. 1. 0. 0. 1.]\n [1. 0. 1. 0. 1. 1.]\n [1. 0. 1. 0. 1. 1.]]\n","output_type":"stream"}]},{"cell_type":"code","source":"output=np.load('/kaggle/working/output.npy')","metadata":{"execution":{"iopub.status.busy":"2023-08-23T05:31:38.272289Z","iopub.execute_input":"2023-08-23T05:31:38.273739Z","iopub.status.idle":"2023-08-23T05:31:38.279439Z","shell.execute_reply.started":"2023-08-23T05:31:38.273704Z","shell.execute_reply":"2023-08-23T05:31:38.278275Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"code","source":"output.shape","metadata":{"papermill":{"duration":null,"end_time":null,"exception":null,"start_time":null,"status":"pending"},"tags":[],"execution":{"iopub.status.busy":"2023-08-23T05:31:38.281388Z","iopub.execute_input":"2023-08-23T05:31:38.282208Z","iopub.status.idle":"2023-08-23T05:31:38.292328Z","shell.execute_reply.started":"2023-08-23T05:31:38.282170Z","shell.execute_reply":"2023-08-23T05:31:38.291096Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"(3871, 6)"},"metadata":{}}]},{"cell_type":"markdown","source":"## **Generating CSV file**","metadata":{"papermill":{"duration":null,"end_time":null,"exception":null,"start_time":null,"status":"pending"},"tags":[]}},{"cell_type":"code","source":"numpy_array = output  # Your numpy array with 6 columns\ncsv_file_path = '/kaggle/working/VIPCUP2023_OLIVES_edit/csv_dir/test_set_submission_template.csv'\n\n","metadata":{"papermill":{"duration":null,"end_time":null,"exception":null,"start_time":null,"status":"pending"},"tags":[],"execution":{"iopub.status.busy":"2023-08-23T05:31:38.293854Z","iopub.execute_input":"2023-08-23T05:31:38.294725Z","iopub.status.idle":"2023-08-23T05:31:38.300606Z","shell.execute_reply.started":"2023-08-23T05:31:38.294692Z","shell.execute_reply":"2023-08-23T05:31:38.299292Z"},"trusted":true},"execution_count":22,"outputs":[]},{"cell_type":"code","source":"csv_data = []\nwith open(csv_file_path, 'r') as csv_file:\n    csv_reader = csv.reader(csv_file)\n    for row in csv_reader:\n        csv_data.append(row)\n","metadata":{"papermill":{"duration":null,"end_time":null,"exception":null,"start_time":null,"status":"pending"},"tags":[],"execution":{"iopub.status.busy":"2023-08-23T05:31:38.303009Z","iopub.execute_input":"2023-08-23T05:31:38.304050Z","iopub.status.idle":"2023-08-23T05:31:38.319447Z","shell.execute_reply.started":"2023-08-23T05:31:38.304015Z","shell.execute_reply":"2023-08-23T05:31:38.318424Z"},"trusted":true},"execution_count":23,"outputs":[]},{"cell_type":"code","source":"combined_data = []\nfor i in range(len(csv_data)):\n    if i == 0: \n        combined_row = csv_data[i]\n    else:\n        csv_row = [csv_data[i][0]]\n        numpy_row = numpy_array[i-1].tolist()\n        combined_row = csv_row + numpy_row\n    combined_data.append(combined_row)\n","metadata":{"papermill":{"duration":null,"end_time":null,"exception":null,"start_time":null,"status":"pending"},"tags":[],"execution":{"iopub.status.busy":"2023-08-23T05:31:38.320758Z","iopub.execute_input":"2023-08-23T05:31:38.321515Z","iopub.status.idle":"2023-08-23T05:31:38.334468Z","shell.execute_reply.started":"2023-08-23T05:31:38.321482Z","shell.execute_reply":"2023-08-23T05:31:38.333527Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"code","source":"output_file_path = '/kaggle/working/createdOutput'+output_csv_name_content+'.csv'  # Change this to your desired output file name\nwith open(output_file_path, 'w', newline='') as output_file:\n    csv_writer = csv.writer(output_file)\n    for row in combined_data:\n        csv_writer.writerow(row)","metadata":{"papermill":{"duration":null,"end_time":null,"exception":null,"start_time":null,"status":"pending"},"tags":[],"execution":{"iopub.status.busy":"2023-08-23T05:31:38.335842Z","iopub.execute_input":"2023-08-23T05:31:38.336223Z","iopub.status.idle":"2023-08-23T05:31:38.361931Z","shell.execute_reply.started":"2023-08-23T05:31:38.336191Z","shell.execute_reply":"2023-08-23T05:31:38.361048Z"},"trusted":true},"execution_count":25,"outputs":[]},{"cell_type":"code","source":"#%cd /kaggle/working/","metadata":{"execution":{"iopub.status.busy":"2023-08-23T05:31:38.363335Z","iopub.execute_input":"2023-08-23T05:31:38.363684Z","iopub.status.idle":"2023-08-23T05:31:38.370159Z","shell.execute_reply.started":"2023-08-23T05:31:38.363653Z","shell.execute_reply":"2023-08-23T05:31:38.367668Z"},"trusted":true},"execution_count":26,"outputs":[]},{"cell_type":"code","source":"'''\noutput_zip_file_path = '/kaggle/working/createdOutput'+output_csv_name_content+'.zip'\n!zip -r {output_zip_file_path} {output_file_path}\n\noutput_file_path=output_zip_file_path\n'''","metadata":{"execution":{"iopub.status.busy":"2023-08-23T05:31:38.371645Z","iopub.execute_input":"2023-08-23T05:31:38.372221Z","iopub.status.idle":"2023-08-23T05:31:38.380511Z","shell.execute_reply.started":"2023-08-23T05:31:38.372186Z","shell.execute_reply":"2023-08-23T05:31:38.379437Z"},"trusted":true},"execution_count":27,"outputs":[{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"\"\\noutput_zip_file_path = '/kaggle/working/createdOutput'+output_csv_name_content+'.zip'\\n!zip -r {output_zip_file_path} {output_file_path}\\n\\noutput_file_path=output_zip_file_path\\n\""},"metadata":{}}]},{"cell_type":"code","source":"import zipfile\n\n#output_csv_name_content = \"your_content_name\"\noutput_zip_file_path = '/kaggle/working/createdOutput' + output_csv_name_content + '.zip'\n\n# Create the zip archive\nwith zipfile.ZipFile(output_zip_file_path, 'w', zipfile.ZIP_DEFLATED) as zipf:\n    zipf.write(output_file_path, os.path.basename(output_file_path))\n\n# Update the output_file_path to point to the created zip file\noutput_file_path = output_zip_file_path\n","metadata":{"execution":{"iopub.status.busy":"2023-08-23T05:31:38.382476Z","iopub.execute_input":"2023-08-23T05:31:38.383349Z","iopub.status.idle":"2023-08-23T05:31:38.394751Z","shell.execute_reply.started":"2023-08-23T05:31:38.383316Z","shell.execute_reply":"2023-08-23T05:31:38.393848Z"},"trusted":true},"execution_count":28,"outputs":[]},{"cell_type":"code","source":"!gsutil -m cp {output_file_path} gs://pixelvision/pytorch9000","metadata":{"papermill":{"duration":null,"end_time":null,"exception":null,"start_time":null,"status":"pending"},"tags":[],"execution":{"iopub.status.busy":"2023-08-23T05:31:38.396342Z","iopub.execute_input":"2023-08-23T05:31:38.396712Z","iopub.status.idle":"2023-08-23T05:31:42.650444Z","shell.execute_reply.started":"2023-08-23T05:31:38.396680Z","shell.execute_reply":"2023-08-23T05:31:42.649202Z"},"trusted":true},"execution_count":29,"outputs":[{"name":"stdout","text":"Copying file:///kaggle/working/createdOutputmodel=resnet18epochs=1batch_size=64learning_rate=0.05momentum=0.9temp=0.07.zip [Content-Type=application/zip]...\n/ [1/1 files][ 13.4 KiB/ 13.4 KiB] 100% Done                                    \nOperation completed over 1 objects/13.4 KiB.                                     \n","output_type":"stream"}]},{"cell_type":"code","source":"#!zip -r /kaggle/working/model.zip /kaggle/working/save/OLIVES_models/resnet18_lr_0.05_decay_0.0001_bsz_128_temp_0.07","metadata":{"papermill":{"duration":null,"end_time":null,"exception":null,"start_time":null,"status":"pending"},"tags":[],"execution":{"iopub.status.busy":"2023-08-23T05:31:42.652268Z","iopub.execute_input":"2023-08-23T05:31:42.652680Z","iopub.status.idle":"2023-08-23T05:31:42.658153Z","shell.execute_reply.started":"2023-08-23T05:31:42.652639Z","shell.execute_reply":"2023-08-23T05:31:42.657114Z"},"trusted":true},"execution_count":30,"outputs":[]},{"cell_type":"code","source":"torch.seed()\n","metadata":{"papermill":{"duration":null,"end_time":null,"exception":null,"start_time":null,"status":"pending"},"tags":[],"execution":{"iopub.status.busy":"2023-08-23T05:31:42.659952Z","iopub.execute_input":"2023-08-23T05:31:42.660717Z","iopub.status.idle":"2023-08-23T05:31:42.674131Z","shell.execute_reply.started":"2023-08-23T05:31:42.660683Z","shell.execute_reply":"2023-08-23T05:31:42.673175Z"},"trusted":true},"execution_count":31,"outputs":[{"execution_count":31,"output_type":"execute_result","data":{"text/plain":"11945899144725594720"},"metadata":{}}]},{"cell_type":"code","source":"torch.manual_seed(17569191939567307870)                #previous train seed","metadata":{"papermill":{"duration":null,"end_time":null,"exception":null,"start_time":null,"status":"pending"},"tags":[],"execution":{"iopub.status.busy":"2023-08-23T05:31:42.676178Z","iopub.execute_input":"2023-08-23T05:31:42.676921Z","iopub.status.idle":"2023-08-23T05:31:42.683995Z","shell.execute_reply.started":"2023-08-23T05:31:42.676889Z","shell.execute_reply":"2023-08-23T05:31:42.682972Z"},"trusted":true},"execution_count":32,"outputs":[{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"<torch._C.Generator at 0x7ec27dce4b70>"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{"papermill":{"duration":null,"end_time":null,"exception":null,"start_time":null,"status":"pending"},"tags":[]},"execution_count":null,"outputs":[]}]}
